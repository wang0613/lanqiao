package src.c_2016;

/*
搭积木
小明最近喜欢搭数字积木,
一共有10块积木，每个积木上有一个数字，0~9。
搭积木规则:
每个积木放到其它两个积木的上面，并且一定比下面的两个积木数字小。
最后搭成4层的金字塔形，必须用完所有的积木。

下面是两种合格的搭法:
     0
    1 2
   3 4 5
  6 7 8 9

        0
       3 1
      7 5 2
    9 8  6  4
请你计算这样的搭法一共有多少种?
请填表示总数目的数字。
注意:你提交的应该是一个整数， 不要填写任何多余的内容或说明性文字。

 */
//下面一个数的一定大于肩膀的两个数
public class _07搭积木 {
    static int ans;

    public static void main(String[] args) {
        int[] a = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};

        f(a, 0);
        System.out.println(ans);
    }

    static void f(int[] a, int k) {
        if (k == a.length) {
            ans++;
        }
        for (int i = k; i < a.length; i++) {
            int t = a[i];
            a[i] = a[k];
            a[k] = t;


            if ((k == 1 && a[1] < a[0]) || (k == 2 && a[2] < a[0]) ||
                    (k == 3 && a[3] < a[1]) || (k == 4 && (a[4] < a[1] || a[4] < a[2])) ||
                    (k == 5 && a[5] < a[2]) || (k == 6 && a[6] < a[3]) ||
                    (k == 7 && (a[7] < a[3] || a[7] < a[4])) || (k==8&&(a[8]<a[4]||a[8]<a[5])) ||
                    (k==9 && a[9] <a[5])

            ){
                t = a[i];
                a[i] = a[k];
                a[k] = t;
                continue;
            }

                f(a, k + 1);

            t = a[i];
            a[i] = a[k];
            a[k] = t;

        }
    }
}
