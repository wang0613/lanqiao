package src.b_2014;

/*
题:圆周率
数学发展历史上，圆周率的计算曾有许多有趣甚至是传奇的故事。其中许多方法都涉及无穷级数

图1.png中所示，就是一种用连分数的形式表示的圆周率求法。

下面的程序实现了该求解方法。实际上数列的收敛对x的初始值 并不敏感。

结果打印出圆周率近似值(保留小数点后4位,并不一定与圆周率真值吻合)。

4            1
---  = 1+----------------
π            9
         2+-------------
              25
            2+------------
               2+··········


代码填空：
 double x = 111;
        for (int n = 10000; n >= 0; n--) {
            int i = 2 * n + 1;
            x = 2 + (i * i / x);

        }
        System.out.println(String.format("%.4f", ---填空位置--));
 */
public class _05圆周率 {
    public static void main(String[] args) {

        double x = 111;
        for (int n = 10000; n >= 0; n--) {
            int i = 2 * n + 1;
            x = 2 + (i * i / x);

        }
        //使用极限思维，当n=0时
        //当n=0时，i=1, x=2+1/x`
        //对比式子发现，发现少了一个 1 所以结果x需要-1
        //坑1： 分子有一个4

//        3.1415
        System.out.println(String.format("%.4f", 4 / (x - 1)));
    }
}
